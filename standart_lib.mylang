void array<bool>.sort() {
	if (it.size() == 1) return;

	array<bool> left, right;
	int k = 0; 
	while (k < it.size() / 2) {
		left.pushBack(it[k]);
		k += 1;
	}
	while (k < it.size()) {
		right.pushBack(it[k]);
		k += 1;
	}
	left.sort();
	right.sort();
	int i = 0, j = 0;
	k = 0;
	while (i < left.size() && j < right.size()) {
		if (left[i] < right[j]) {
			it[k] = left[i];
			i += 1;
		} else {
			it[k] = right[j];
			j += 1;
		}
		k += 1;
	}

	while (i < left.size()) {
		it[k] = left[i];
		i += 1;
		k += 1;
	}

	while (j < right.size()) {
		it[k] = right[j];
		j += 1;
		k += 1;
	}

}

void array<char>.sort() {
	if (it.size() == 1) return;

	array<char> left, right;
	int k = 0; 
	while (k < it.size() / 2) {
		left.pushBack(it[k]);
		k += 1;
	}
	while (k < it.size()) {
		right.pushBack(it[k]);
		k += 1;
	}
	left.sort();
	right.sort();
	int i = 0, j = 0;
	k = 0;
	while (i < left.size() && j < right.size()) {
		if (left[i] < right[j]) {
			it[k] = left[i];
			i += 1;
		} else {
			it[k] = right[j];
			j += 1;
		}
		k += 1;
	}

	while (i < left.size()) {
		it[k] = left[i];
		i += 1;
		k += 1;
	}

	while (j < right.size()) {
		it[k] = right[j];
		j += 1;
		k += 1;
	}

}

void array<int>.sort() {
	if (it.size() == 1) return;

	array<int> left, right;
	int k = 0; 
	while (k < it.size() / 2) {
		left.pushBack(it[k]);
		k += 1;
	}
	while (k < it.size()) {
		right.pushBack(it[k]);
		k += 1;
	}
	left.sort();
	right.sort();
	int i = 0, j = 0;
	k = 0;
	while (i < left.size() && j < right.size()) {
		if (left[i] < right[j]) {
			it[k] = left[i];
			i += 1;
		} else {
			it[k] = right[j];
			j += 1;
		}
		k += 1;
	}

	while (i < left.size()) {
		it[k] = left[i];
		i += 1;
		k += 1;
	}

	while (j < right.size()) {
		it[k] = right[j];
		j += 1;
		k += 1;
	}

}

void array<float>.sort() {
	if (it.size() == 1) return;

	array<float> left, right;
	int k = 0; 
	while (k < it.size() / 2) {
		left.pushBack(it[k]);
		k += 1;
	}
	while (k < it.size()) {
		right.pushBack(it[k]);
		k += 1;
	}
	left.sort();
	right.sort();
	int i = 0, j = 0;
	k = 0;
	while (i < left.size() && j < right.size()) {
		if (left[i] < right[j]) {
			it[k] = left[i];
			i += 1;
		} else {
			it[k] = right[j];
			j += 1;
		}
		k += 1;
	}

	while (i < left.size()) {
		it[k] = left[i];
		i += 1;
		k += 1;
	}

	while (j < right.size()) {
		it[k] = right[j];
		j += 1;
		k += 1;
	}

}

void array<string>.sort() {
	if (it.size() == 1) return;

	array<string> left, right;
	int k = 0; 
	while (k < it.size() / 2) {
		left.pushBack(it[k]);
		k += 1;
	}
	while (k < it.size()) {
		right.pushBack(it[k]);
		k += 1;
	}
	left.sort();
	right.sort();
	int i = 0, j = 0;
	k = 0;
	while (i < left.size() && j < right.size()) {
		if (left[i] < right[j]) {
			it[k] = left[i];
			i += 1;
		} else {
			it[k] = right[j];
			j += 1;
		}
		k += 1;
	}

	while (i < left.size()) {
		it[k] = left[i];
		i += 1;
		k += 1;
	}

	while (j < right.size()) {
		it[k] = right[j];
		j += 1;
		k += 1;
	}

}
